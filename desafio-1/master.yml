---
- hosts: all
  become: true
  vars:
    docker_container_name: desafio_1
    docker_image_name: desafio_1
    docker_image_tag: latest

  tasks:
    - name: Instalar pacotes do sistemas necessários para o Docker
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Adicionar a chave do Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Copiar código-fonte da aplicação para o servidor
      copy:
        src: "{{ item }}"
        dest: /home/ubuntu/app/
        owner: ubuntu
        group: ubuntu
      with_items:
        - Dockerfile 
        - main.py 
        - requirements.txt

    - name: Build da imagem do projeto com Docker
      docker_image:
        build:
          path: /home/ubuntu/app
          pull: no
        name: "{{ docker_image_name }}"
        tag: "{{ docker_image_tag }}"
        push: no
        source: build

    - name: Create default containers
      docker_container:
        image: "{{ docker_image_name }}:{{ docker_image_tag }}"
        name: "{{ docker_container_name }}"
        state: started
        ports: 
          - "80:5000"